#!/usr/bin/python
# -*- coding: UTF-8 -*-

'''
19.1 为什么要好玩
好玩的编程、极限编程

19.2 程序设计的柔术
1、原型设计
2、配置
3、自动化测试

19.3 原型设计
当然，这对于了解类似iter这样的函数的工作方式很有用
原型这个词意味着实验性的实现，即实现最终程序主要功能的大概模型
对代码重写说不，推荐对原型进行重构和修改，将其完善为功能根更好的系统。

19.4 配置
本节内会重温抽象的重要原则。一种更加简单的在程序中引入抽象的方法：从代码中提取符号化常量（symbolic constant）。

19.4.1 提取常量
使用特殊的命名规则——名字只用大写字母，并且用下划线分隔每个单词。

19.4.2 配置文件
1、放在模块的开头
2、设置单独的模块文件config.py
警告：使用配置问价具有两面性。一方面，配置功能很有用，但对整个项目使用集中、共享的变量库会让项目的模块行下降、整体性上升。一定要确保没有破坏抽象（比如封装）规则。
3、使用标准库ConfigParser   
使用软件过程中最大的挫折之一就是不能让软件按自己想要的方式工作

19.5 日志记录
标准库logging模块。它的基本用法很简单。
logging模块非常高级，后续详细学习。

19.6 后续
'''

